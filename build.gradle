buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.hibernate:hibernate-gradle-plugin:$hibernatePluginVersion"
  }
}

plugins {
  id "fr.brouillard.oss.gradle.jgitver" version "$gradleJgitverPluginVersion"
  id "org.springframework.boot" version "$springBootVersion"
  id "io.spring.dependency-management" version "$springDependencyManagementVersion"
  id "org.springframework.experimental.aot" version "$springAotVersion"
  id "java"
  id "jacoco"
}

apply plugin: "org.hibernate.orm"

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

jgitver {
  mavenLike true
  policy {
    pattern = "(.*)"
    transformations = ["IGNORE"]
  }
}

group = "net.croz"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://repo.spring.io/release" }
}

dependencies {
  implementation platform("net.croz.nrich:nrich-bom:$nrichVersion")

  implementation "com.google.code.findbugs:jsr305:$findBugsVersion"
  implementation "net.croz.nrich:nrich-core-api"
  implementation "net.croz.nrich:nrich-encrypt-spring-boot-starter"
  implementation "net.croz.nrich:nrich-excel-spring-boot-starter"
  implementation "net.croz.nrich:nrich-form-configuration-spring-boot-starter"
  implementation "net.croz.nrich:nrich-jackson-spring-boot-starter"
  implementation "net.croz.nrich:nrich-logging"
  implementation "net.croz.nrich:nrich-notification-spring-boot-starter"
  implementation "net.croz.nrich:nrich-registry-spring-boot-starter"
  implementation "net.croz.nrich:nrich-search-spring-boot-starter"
  implementation "net.croz.nrich:nrich-validation-spring-boot-starter"
  implementation "net.croz.nrich:nrich-webmvc-spring-boot-starter"

  implementation "org.ehcache:ehcache"
  implementation "org.hibernate:hibernate-envers"
  implementation "org.springframework.boot:spring-boot-starter-cache"
  implementation("org.springframework.boot:spring-boot-starter-web") {
    exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-core"
    exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-websocket"
  }

  implementation "org.apache.tomcat.experimental:tomcat-embed-programmatic:${dependencyManagement.importedProperties["tomcat.version"]}"

  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"

  runtimeOnly "com.h2database:h2"

  testAnnotationProcessor "org.projectlombok:lombok"
  testCompileOnly "org.projectlombok:lombok"

  testImplementation "org.apache.poi:poi"
  testImplementation "org.apache.poi:poi-ooxml"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.named("test") {
  useJUnitPlatform()
}

bootBuildImage {
  builder = "paketobuildpacks/builder:$buildImageVersion"
  runImage = "agrancaric/nrich-run-native:$runImageVersion"
  environment = ["BP_NATIVE_IMAGE": "true", "BP_NATIVE_IMAGE_BUILD_ARGUMENTS": "-H:+AddAllCharsets"]
}

hibernate {
  enhance {
    enableLazyInitialization = true
    enableDirtyTracking = true
    enableAssociationManagement = true
    enableExtendedEnhancement = false
  }
}
