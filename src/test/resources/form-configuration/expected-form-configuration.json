[
    {
        "formId": "form-configuration.demo-request",
        "constrainedPropertyConfigurationList": [
            {
                "path": "title",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "InList",
                        "argumentMap": {
                            "value": [
                                "mr",
                                "mrs",
                                "miss"
                            ]
                        },
                        "errorMessage": "Not in list: mr, mrs, miss"
                    }
                ]
            },
            {
                "path": "email",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "Email",
                        "argumentMap": {
                            "regexp": ".*",
                            "flags": []
                        },
                        "errorMessage": "Email is not in the correct format"
                    },
                    {
                        "name": "NotBlank",
                        "argumentMap": {},
                        "errorMessage": "Email cannot be empty"
                    }
                ]
            },
            {
                "path": "nestedFormConfigurationDemoRequest",
                "propertyType": "net.croz.nrichdemobackend.formconfiguration.request.NestedFormConfigurationDemoRequest",
                "javascriptType": "object",
                "validatorList": [
                    {
                        "name": "NotNull",
                        "argumentMap": {},
                        "errorMessage": "Cannot be null"
                    }
                ]
            },
            {
                "path": "nestedFormConfigurationDemoRequest.country",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "Size",
                        "argumentMap": {
                            "min": 2,
                            "max": 100
                        },
                        "errorMessage": "Country is not correctly defined"
                    }
                ]
            },
            {
                "path": "nestedFormConfigurationDemoRequest.city",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "Size",
                        "argumentMap": {
                            "min": 2,
                            "max": 150
                        },
                        "errorMessage": "City is not correctly defined"
                    }
                ]
            },
            {
                "path": "nestedFormConfigurationDemoRequest.street",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "NotNull",
                        "argumentMap": {},
                        "errorMessage": "Cannot be null"
                    }
                ]
            },
            {
                "path": "firstName",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "NotBlank",
                        "argumentMap": {},
                        "errorMessage": "Cannot be blank"
                    }
                ]
            },
            {
                "path": "phone",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "Size",
                        "argumentMap": {
                            "min": 5,
                            "max": 9
                        },
                        "errorMessage": "Size must be between: 9 and 5"
                    }
                ]
            },
            {
                "path": "startDate",
                "propertyType": "java.time.Instant",
                "javascriptType": "date",
                "validatorList": [
                    {
                        "name": "NotNull",
                        "argumentMap": {},
                        "errorMessage": "Cannot be null"
                    }
                ]
            },
            {
                "path": "hours",
                "propertyType": "java.lang.Integer",
                "javascriptType": "number",
                "validatorList": [
                    {
                        "name": "Min",
                        "argumentMap": {
                            "value": 0
                        },
                        "errorMessage": "Minimum value is: 0"
                    },
                    {
                        "name": "Max",
                        "argumentMap": {
                            "value": 23
                        },
                        "errorMessage": "Maximum value is: 23"
                    }
                ]
            },
            {
                "path": "income",
                "propertyType": "java.math.BigDecimal",
                "javascriptType": "number",
                "validatorList": [
                    {
                        "name": "Digits",
                        "argumentMap": {
                            "integer": 10,
                            "fraction": 2
                        },
                        "errorMessage": "Maximum number of digits is: 10 and scale is: 2"
                    },
                    {
                        "name": "DecimalMin",
                        "argumentMap": {
                            "inclusive": true,
                            "value": "0.0"
                        },
                        "errorMessage": "Income must be greater than zero"
                    }
                ]
            },
            {
                "path": "endDate",
                "propertyType": "java.time.Instant",
                "javascriptType": "date",
                "validatorList": [
                    {
                        "name": "NotNull",
                        "argumentMap": {},
                        "errorMessage": "Cannot be null"
                    }
                ]
            },
            {
                "path": "phonePrefix",
                "propertyType": "java.lang.String",
                "javascriptType": "string",
                "validatorList": [
                    {
                        "name": "Size",
                        "argumentMap": {
                            "min": 3,
                            "max": 3
                        },
                        "errorMessage": "Size must be between: 3 and 3"
                    }
                ]
            }
        ]
    }
]
